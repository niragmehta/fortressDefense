In this OOD (Object Oriented Design),classes are created to handle game logic and UI design seperately.

To Draw the game board, 
-a Cell class is used to represent every coordinate.
-a Board class is designed to store a grid of Cell objects.
-For every user input, the status of affected cell is changed and the board object is updated accordingly.

To handle the active tank collection and fortress health,
-a Tank class is designed to instantiate each Tank object on the Board object.
-each Tank object holds its own attributes such as health, damage and shape (essentially the coordinates).
-We then create a class called TankCollection that holds the entire collection of tanks in it
-TankCollection has its own attributes (like cumalativeDmgOutput) which are calculated based the cumulative attributes of all tanks within it
-a Fortress class is designed to hold the health of user's Fortress.
-based on status of Tank objects in TankCollection object, the health of the fortress is reduced accordingly until user wins/loses.

To instantiate and initialize the Board object with Tank objects, a Game class is designed to
-add Tank object to the Board object.
-update the Board object.
-check if user is victorious.
-display first introductory message on screen.

To handle Ui,a Display class is designed to
-display the grid of Board Object and the status of Cell objects.
-display damage output of Tank objects.
-display health of Fortress objects.
